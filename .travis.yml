language: android
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools

    # The BuildTools version used by your project
    # - build-tools-23.0.1

    # The SDK version used to compile your project
    # - android-22
    - ant
    # - platform-tools
    # - extra
    # - addon
    # - sys-img-armeabi-v7a-android-22

    # Additional components
    # - extra-google-google_play_services
    # - extra-google-m2repository
    # - extra-android-m2repository
    #- addon-google_apis-google-26

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    #- sys-img-armeabi-v7a-android-24
    #- sys-img-armeabi-v7a-android-17

    
#  licenses:
#    - 'android-sdk-license-.+'

#env:
#  global:
#  # install timeout in minutes (2 minutes by default)
#    - ADB_INSTALL_TIMEOUT=8

# Emulator Management: Create, Start and Wait
#before_script:
#  - echo no | android create avd --force -n test -t android-24 --abi armeabi-v7a
#  - emulator -avd test -no-skin -no-audio -no-window &
#  - android-wait-for-emulator
#  - adb shell input keyevent 82 &

language: cpp

git:
  lfs_skip_smudge: true

before_install:
  - sudo apt-get update -qq
  - echo -e "machine github.com\n login $GITHUB_TOKEN" >> ~/.netrc
  # - git lfs pull

install:
  - ./configure-cocos-android.sh

# cache:
#   directories:
#     - $HOME/android-sdk
#     - $HOME/android-sdk-dl
#     - $HOME/android-ndk
#     - $HOME/android-ndk-dl
#     - $HOME/cocos
#     - $HOME/cocos-dl

script:
  - cd $HOME/LudoMuse
  - export ANDROID_SDK_ROOT=$HOME/android-sdk
  - source $HOME/.bashrc
  - echo $ANDROID_SDK_ROOT
  - cocos compile -p android --ap android-22 -m release
